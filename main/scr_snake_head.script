function init(self)
	msg.post(".", "acquire_input_focus")
	
	self.speed = 100
	self.input = vmath.vector3()
	self.dir = vmath.vector3(1, 0, 0)
	self.moving = true -- not set by the player, it's for when we fail or pause
	self.next_obj = nil
end

function final(self)
	msg.post(".", "release_input_focus")
end

function update(self, dt)
	if self.moving then
		if vmath.length_sqr(self.input) == 0 then
			self.input = self.dir
		else
			self.dir = vmath.normalize(self.input)
		end
		local pos = go.get_position()
		pos = pos + self.dir * self.speed * dt
		go.set_position(pos)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash('collision_response') and message.other_id == hash('/go_perimeter') then
		print('collision!', message.other_id, sender)
		go.set_position(vmath.vector3(400, 400, 0))
    end
end

function on_input(self, action_id, action)
	if action_id == hash('up') then
		self.input.y = 1
		self.input.x = 0
	elseif action_id == hash('down') then
		self.input.y = -1
		self.input.x = 0
	elseif action_id == hash('right') then
		self.input.x = 1
		self.input.y = 0
	elseif action_id == hash('left') then
		self.input.x = -1
		self.input.y = 0
	end
end
